/*
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.youneedabudget.com
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Category {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "category_group_id")]
    pub category_group_id: String,
    #[serde(rename = "name")]
    pub name: String,
    /// Whether or not the category is hidden
    #[serde(rename = "hidden")]
    pub hidden: bool,
    /// If category is hidden this is the id of the category group it originally belonged to before it was hidden.
    #[serde(rename = "original_category_group_id", skip_serializing_if = "Option::is_none")]
    pub original_category_group_id: Option<String>,
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    /// Budgeted amount in milliunits format
    #[serde(rename = "budgeted")]
    pub budgeted: i64,
    /// Activity amount in milliunits format
    #[serde(rename = "activity")]
    pub activity: i64,
    /// Balance in milliunits format
    #[serde(rename = "balance")]
    pub balance: i64,
    /// The type of goal, if the category has a goal (TB='Target Category Balance', TBD='Target Category Balance by Date', MF='Monthly Funding', NEED='Plan Your Spending')
    #[serde(rename = "goal_type", skip_serializing_if = "Option::is_none")]
    pub goal_type: Option<GoalType>,
    /// The month a goal was created
    #[serde(rename = "goal_creation_month", skip_serializing_if = "Option::is_none")]
    pub goal_creation_month: Option<String>,
    /// The goal target amount in milliunits
    #[serde(rename = "goal_target", skip_serializing_if = "Option::is_none")]
    pub goal_target: Option<i64>,
    /// The original target month for the goal to be completed.  Only some goal types specify this date.
    #[serde(rename = "goal_target_month", skip_serializing_if = "Option::is_none")]
    pub goal_target_month: Option<String>,
    /// The percentage completion of the goal
    #[serde(rename = "goal_percentage_complete", skip_serializing_if = "Option::is_none")]
    pub goal_percentage_complete: Option<i32>,
    /// The number of months, including the current month, left in the current goal period.
    #[serde(rename = "goal_months_to_budget", skip_serializing_if = "Option::is_none")]
    pub goal_months_to_budget: Option<i32>,
    /// The amount of funding still needed in the current month to stay on track towards completing the goal within the current goal period.  This amount will generally correspond to the 'Underfunded' amount in the web and mobile clients except when viewing a category with a Needed for Spending Goal in a future month.  The web and mobile clients will ignore any funding from a prior goal period when viewing category with a Needed for Spending Goal in a future month.
    #[serde(rename = "goal_under_funded", skip_serializing_if = "Option::is_none")]
    pub goal_under_funded: Option<i64>,
    /// The total amount funded towards the goal within the current goal period.
    #[serde(rename = "goal_overall_funded", skip_serializing_if = "Option::is_none")]
    pub goal_overall_funded: Option<i64>,
    /// The amount of funding still needed to complete the goal within the current goal period.
    #[serde(rename = "goal_overall_left", skip_serializing_if = "Option::is_none")]
    pub goal_overall_left: Option<i64>,
    /// Whether or not the category has been deleted.  Deleted categories will only be included in delta requests.
    #[serde(rename = "deleted")]
    pub deleted: bool,
}

impl Category {
    pub fn new(id: String, category_group_id: String, name: String, hidden: bool, budgeted: i64, activity: i64, balance: i64, deleted: bool) -> Category {
        Category {
            id,
            category_group_id,
            name,
            hidden,
            original_category_group_id: None,
            note: None,
            budgeted,
            activity,
            balance,
            goal_type: None,
            goal_creation_month: None,
            goal_target: None,
            goal_target_month: None,
            goal_percentage_complete: None,
            goal_months_to_budget: None,
            goal_under_funded: None,
            goal_overall_funded: None,
            goal_overall_left: None,
            deleted,
        }
    }
}

/// The type of goal, if the category has a goal (TB='Target Category Balance', TBD='Target Category Balance by Date', MF='Monthly Funding', NEED='Plan Your Spending')
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GoalType {
    #[serde(rename = "TB")]
    TB,
    #[serde(rename = "TBD")]
    TBD,
    #[serde(rename = "MF")]
    MF,
    #[serde(rename = "NEED")]
    NEED,
    #[serde(rename = "DEBT")]
    DEBT,
}

impl Default for GoalType {
    fn default() -> GoalType {
        Self::TB
    }
}

